<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sql.store.mapper">
	<select id="findStoreTransaction" parameterType="hashmap" resultType="transaction">
		SELECT TRANSACTION_TIME, TRANSACTION_AMT
		FROM (SELECT TRANSACTION_TIME, TRANSACTION_AMT, MEMBER_ID, STORE_ID FROM TRANSACTION ORDER BY TRANSACTION_TIME DESC)
		WHERE MEMBER_ID=#{memberId} AND STORE_ID=#{storeId} AND ROWNUM <![CDATA[<=]]> 5
	</select>
	
	<select id="findStoreInfo" parameterType="String" resultType="store">
		SELECT STORE_NAME, STORE_TELE, STORE_ADDR, STORE_WORKHOUR, STORE_HOLIDAY, STORE_LATITUDE, STORE_LONGITUDE, STORE_THUMBNAIL, STORE_CATEGORY
		FROM STORE
		WHERE STORE_ID=#{VALUE} <!-- Value값에 storeId값 -->
	</select>
	
	<select id="findStoreId" parameterType="String" resultType="string">
		SELECT STORE_ID
		FROM STORE
		WHERE STORE_NAME = #{storeName}
	</select>
	
	<select id="findStorePopularByRegion" parameterType="String" resultType="store">
		SELECT STORE_ID, STORE_NAME, STORE_ADDR, STORE_CATEGORY, STORE_TOTALVISIT
		FROM(SELECT * FROM STORE
		WHERE STORE_ADDR LIKE #{VALUE} || '%'
		ORDER BY STORE_TOTALVISIT DESC)
		WHERE ROWNUM <![CDATA[<=]]> 10
	</select>
	
	<select id="findStorePopularByPeriod" parameterType="String" resultType="store">
		SELECT STORE_ID, STORE_NAME, STORE_ADDR, STORE_CATEGORY, STORE_TOTALVISIT
		FROM(
		SELECT S.STORE_ID, S.STORE_NAME, S.STORE_ADDR, S.STORE_CATEGORY, S.STORE_TOTALVISIT, T.CNT
				FROM(
				SELECT STORE_ID, COUNT(STORE_ID) AS CNT
				FROM TRANSACTION
				WHERE TRANSACTION_TIME BETWEEN (select to_char(add_months(sysdate,-12),'yyyy-mm-dd') from dual) AND SYSDATE
				GROUP BY STORE_ID
				ORDER BY CNT DESC) T
				LEFT OUTER JOIN
				(SELECT STORE_ID, STORE_NAME, STORE_ADDR, STORE_CATEGORY, STORE_TOTALVISIT 
				FROM STORE) S
				ON T.STORE_ID = S.STORE_ID
				ORDER BY T.CNT DESC, STORE_ID)
		WHERE ROWNUM <![CDATA[<=]]> 10
	</select>
	
	<select id="findStorePopularByCategory" parameterType="String" resultType="store">
		SELECT STORE_ID, STORE_NAME, STORE_ADDR, STORE_CATEGORY, STORE_TOTALVISIT
		FROM(SELECT * FROM STORE
		WHERE STORE_CATEGORY = #{VALUE} <!-- Value = category -->
		ORDER BY STORE_TOTALVISIT DESC)
		WHERE ROWNUM <![CDATA[<=]]> 10
	</select>
	
	<select id="findStorePopularByPersonal" parameterType="String" resultType="Map">
		SELECT TRANSACTION_STORE, CNT
        FROM (SELECT TRANSACTION_STORE, COUNT(TRANSACTION_STORE) AS CNT
            FROM TRANSACTION
            WHERE MEMBER_ID = #{memberId}
            GROUP BY TRANSACTION_STORE
            ORDER BY CNT DESC)
        WHERE ROWNUM <![CDATA[<=]]> 3
	</select>
	
	<insert id="addWishlist" parameterType="hashmap">
		INSERT INTO WISHLIST(WISHLIST_ID, MEMBER_ID, STORE_ID) 
		VALUES(WISHLIST_SEQ.NEXTVAL, #{memberId}, #{storeId})
	</insert>
	
	<delete id="deleteWishlist" parameterType="hashmap">
		DELETE FROM WISHLIST 
		WHERE MEMBER_ID=#{memberId} AND STORE_ID=#{storeId}
	</delete>
	
	<select id="findExistWishlist" parameterType="hashmap" resultType="int">
		SELECT STORE_ID, MEMBER_ID
		FROM WISHLIST 
		WHERE MEMBER_ID=#{memberId} AND STORE_ID=#{storeId}
	</select>
	
	<select id="findAllWishlist" parameterType="String" resultType="Store">
		SELECT DISTINCT S.STORE_ID, S.STORE_NAME, S.STORE_ADDR, S.STORE_CATEGORY
		FROM WISHLIST W, STORE S
		WHERE W.STORE_ID = S.STORE_ID AND W.MEMBER_ID = #{memberId}
	</select>
</mapper>
